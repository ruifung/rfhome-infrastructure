kubeProxyReplacement: strict
k8sServiceHost: localhost
k8sServicePort: 7445
# k8sServiceHost: 10.229.97.99
# k8sServicePort: 6443
egressGateway:
  enabled: true
bpf:
  masquerade: true
  vlanBypass: "0"
hubble:
  enabled: true
  relay:
    enabled: true
  ui:
    enabled: true
    ingress:
      enabled: true
      annotations:
        ingress.kubernetes.io/whitelist-source-range: 10.229.2.0/24,10.229.51.0/24
        traefik.ingress.kubernetes.io/router.middlewares: home-network-ak-outpost-authentik-embedded-outpost@kubernetescrd
      labels:
        external-dns: local-pdns
      className: traefik-traefik
      hosts:
      - hubbleui.pathweb.clusters.home.yrf.me
      tls:
      - secretName: pathweb-wildcard-cert
        hosts: 
        - hubbleui.pathweb.clusters.home.yrf.me
  metrics:
    enabled:
      - dns
      - drop
      - tcp
      - flow
      - port-distribution
      - icmp
      - http
    serviceMonitor:
      enabled: true
tunnel: geneve
# ipv4NativeRoutingCIDR: 10.96.0.0/16
loadBalancer:
  serviceTopology: true
  mode: dsr
  dsrDispatch: geneve
# autoDirectNodeRoutes: false
ipam:
  mode: kubernetes
ipv6:
  enabled: true
securityContext:
  capabilities:
    ciliumAgent: 
      - CHOWN
      - KILL
      - NET_ADMIN
      - NET_RAW
      - IPC_LOCK
      - SYS_ADMIN
      - SYS_RESOURCE
      - DAC_OVERRIDE
      - FOWNER
      - SETGID
      - SETUID
    cleanCiliumState: 
      - NET_ADMIN
      - SYS_ADMIN
      - SYS_RESOURCE
cgroup:
  automount:
    enabled: false
  hostRoot: /sys/fs/cgroup
endpointStatus:
  enabled: true
  status: "policy"
cni:
  exclusive: false
prometheus:
  enabled: true
  serviceMonitor:
      enabled: true
operator:
  nodeSelector:
    role: control-plane
  prometheus:
    enabled: true
    serviceMonitor:
      enabled: true
socketLB:
  hostNamespaceOnly: true
envoy:
  enabled: true
bgpControlPlane:
  enabled: true
localRedirectPolicy: true
upgradeCompatibility: "1.13"