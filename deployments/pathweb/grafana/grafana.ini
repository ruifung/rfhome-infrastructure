[server]
root_url = https://grafana.services.home.yrf.me

[auth]
disable_login_form = true
oauth_auto_login = true
signout_redirect_url = https://auth.services.home.yrf.me/application/o/grafana/end-session/

[auth.generic_oauth]
name = RFHome Authentication Service
icon = signin
enabled = true
client_id = CLIENT_ID_IN_SECRET
client_secret = CLIENT_SECRET_IN_SECRET
scopes = openid profile email
empty_scopes = false
auth_url = https://auth.services.home.yrf.me/application/o/authorize/
token_url = https://auth.services.home.yrf.me/application/o/token/
api_url = https://auth.services.home.yrf.me/application/o/userinfo/
allow_sign_up = true
use_pkce = true
auth_style = AutoDetect
role_attribute_path = contains(groups[*], 'rfhome-admin') && 'GrafanaAdmin' || contains(groups[*], 'grafana-admin') && 'Admin' || contains(groups[*], 'grafana-user') && 'Editor' || 'Viewer'
allow_assign_grafana_admin = true

[auth.jwt]
enabled = true
enable_login_token = false
url_login = true
username_claim = preferred_username
email_claim = email
jwk_set_url = https://auth.services.home.yrf.me/application/o/grafana/jwks/
expected_claims = {}
auto_sign_up = true

[auth.anonymous]
enabled = true
org_name = Public Access
org_role = Viewer
hide_version = true

[feature_toggles]
publicDashboards = true

[security]
allow_embedding = true

[database]
type = postgres
host = $__file{/db-config/host}:$__file{/db-config/port}
name = $__file{/db-config/dbname}
user = $__file{/db-config/user}
password =  $__file{/db-config/password}
ssl_mode = require