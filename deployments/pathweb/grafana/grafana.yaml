apiVersion: grafana.integreatly.org/v1beta1
kind: Grafana
metadata:
  name: grafana
  labels:
    dashboards: "grafana"
spec:
  config:
    log:
      mode: console
    auth:
      disable_login_form: "true"
      oauth_auto_login: "true"
      signout_redirect_url: "https://auth.services.home.yrf.me/application/o/grafana/end-session/"
    auth.generic_oauth:
      name: RFHome Authentication Service
      icon: signin
      enabled: "true"
      client_id: ${AUTH_CLIENT_ID}
      client_secret: ${AUTH_CLIENT_SECRET}
      scopes: openid profile email
      empty_scopes: "false"
      auth_url: "https://auth.services.home.yrf.me/application/o/authorize/"
      token_url: "https://auth.services.home.yrf.me/application/o/token/"
      api_url: "https://auth.services.home.yrf.me/application/o/userinfo/"
      allow_sign_up: "true"
      use_pkce: "true"
      auth_style: "AutoDetect"
      role_attribute_path: "contains(groups[*], 'rfhome-admin') && 'GrafanaAdmin' || contains(groups[*], 'grafana-admin') && 'Admin' || contains(groups[*], 'grafana-user') && 'Editor' || 'Viewer'"
      allow_assign_grafana_admin: "true"
    auth.jwt:
      enabled: "true"
      enable_login_token: "false"
      url_login: "true"
      username_claim: preferred_username
      email_claim: email
      jwk_set_url: "https://auth.services.home.yrf.me/application/o/grafana/jwks/"
      expected_claims: "{}"
      auto_sign_up: "true"
    auth.anonymous:
      enabled: true
      org_name: Public Access
      org_role: Viewer
      hide_version: "true"
    security:
      allow_embedding: "true"
    database:
      type: "postgres"
      host: "${DB_HOST}:${DB_PORT}"
      name: "${DB_NAME}"
      user: "${DB_USER}"
      password: "${DB_PASS}"
      ssl_mode: "require"
  ingress:
    spec:
      ingressClassName: traefik-traefik
      rules:
      - host: grafana.services.home.yrf.me
        http:
          paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: grafana-service
                port:
                  number: 3000
      tls:
      - hosts:
        - grafana.services.home.yrf.me
        secretName: services-wildcard-cert
  deployment:
    template:
      spec:
        runtimeClassName: gvisor
        containers:
        - name: grafana
          env:
          - name: AUTH_CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: grafana-secrets
                key: client-id
          - name: AUTH_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: grafana-secrets
                key: client-secret
          - name: DB_HOST
            valueFrom:
              secretKeyRef:
                name: rfhome-postgres-ha-pguser-grafana
                key: pgbouncer-host
          - name: DB_PORT
            valueFrom:
              secretKeyRef:
                name: rfhome-postgres-ha-pguser-grafana
                key: pgbouncer-port
          - name: DB_NAME
            valueFrom:
              secretKeyRef:
                name: rfhome-postgres-ha-pguser-grafana
                key: dbname
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: rfhome-postgres-ha-pguser-grafana
                key: user
          - name: DB_PASS
            valueFrom:
              secretKeyRef:
                name: rfhome-postgres-ha-pguser-grafana
                key: password
        