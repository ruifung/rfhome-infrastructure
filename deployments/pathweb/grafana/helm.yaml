---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: home-network
spec:
  releaseName: grafana
  chart:
    spec:
      chart: grafana
      version: 8.2.26
      sourceRef:
        apiVersion: source.toolkit.fluxcd.io/v1beta2
        kind: HelmRepository
        name: bitnami
        namespace: flux-system
  interval: 15m
  targetNamespace: home-network
  postRenderers:
    - kustomize:
        patchesStrategicMerge:
          - apiVersion: networking.k8s.io/v1
            kind: Ingress
            metadata:
              labels:
                external-dns: local-pdns
              name: grafana
              namespace: home-network
  values:
    ingress:
      annotations:
        traefik.ingress.kubernetes.io/router.middlewares: grafana-rewrite-inject-remove-public-footer-css@kubernetescrd
    persistence:
      accessMode: ReadWriteMany
      storageClass: cephfs
    grafana:
      updateStrategy:
        type: Recreate
      extraEnvVarsSecret: "grafana-config"
      extraVolumes:
        - name: db-config
          secret:
            secretName: rfhome-postgres-ha-pguser-grafana
            optional: false
      extraVolumeMounts:
        - name: db-config
          mountPath: /db-config
          readOnly: true
    config:
      useGrafanaIniFile: true
      grafanaIniConfigMap: "grafana-config"
    datasources:
      secretDefinition:
        apiVersion: 1
        datasources:
          - name: Thanos
            type: prometheus
            url: http://thanos-query-frontend.monitoring:9090
            isDefault: true
    ingress:
      enabled: true
      pathType: Prefix
      hostname: grafana.services.home.yrf.me
      tls: false
      extraTls:
      - hosts:
        - grafana.services.home.yrf.me
        secretName: services-wildcard-cert
      ingressClassName: traefik-traefik
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
        namespace: monitoring
      prometheusRule:
        enabled: false
        namespace: monitoring
        rules:
          - alert: Grafana-Down
            annotations:
              message: "Grafana instance is down"
              summary: Grafana instance is down
            expr: absent(up{job="grafana"} == 1)
            labels:
              severity: warning
              service: grafana
            for: 5m