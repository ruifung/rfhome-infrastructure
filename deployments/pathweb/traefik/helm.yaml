---
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: traefik
  namespace: traefik
spec:
  interval: 15m
  url: https://helm.traefik.io/traefik
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: traefik
  namespace: traefik
spec:
  chart:
    spec:
      chart: traefik
      version: 33.0.0
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: traefik
  interval: 15m
  timeout: 1h
  install:
    createNamespace: false
    skipCRDs: true
  driftDetection:
    mode: enabled
  values:
    priorityClassName: rfhome-network-critical
    nodeSelector:
      kubernetes.io/os: linux
      location: rfhome
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: kubernetes.io/hostname
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: traefik
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: node-group
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: traefik
    additionalArguments:
      - "--providers.file.directory=/additional-configs"
      - "--providers.file.watch=true"
      - "--entrypoints.web.http.middlewares=crowdsec@file"
      - "--entrypoints.websecure.http.middlewares=crowdsec@file"
    deployment:
      # nameOverride: traefik-rfhome
      replicas: 2
      # runtimeClassName: gvisor
      podLabels:
        velero.io/exclude-from-backup: "true"
      additionalVolumes:
        - name: additional-configs
          projected:
            sources:
              - configMap:
                  name: traefik-configs
    volumes:
      - name: crowdsec-bouncer-tls
        mountPath: /crowdsec
        type: secret
    additionalVolumeMounts:       
      - name: additional-configs
        mountPath: /additional-configs
    resources:
      requests:
        cpu: '1.5'
        memory: 350Mi
    service:
      externalTrafficPolicy: Local
      annotations:
        # io.cilium/lb-ipam-ips: 10.229.30.1,fd96:619:6b75:0130::1
        external-dns.alpha.kubernetes.io/hostname: ingress.pathweb.clusters.home.yrf.me
      labels:
        external-dns: local-pdns
        lb-location: rfhome
      ipFamilyPolicy: PreferDualStack
      ipFamilies:
        - IPv4
        - IPv6
    ports:
      traefik:
        port: 9000
        exposedPort: 9000
      web:
        port: 8080
        exposedPort: 80
        expose:
          default: true
        protocol: TCP
        redirectTo:
          port: websecure
      websecure:
        port: 8443
        exposedPort: 443
        expose:
          default: true
        http3:
          enabled: true
        protocol: TCP
        transport:
          respondingTimeouts:
            readTimeout: 300s
    experimental:
      plugins:
        crowdsec:
          moduleName: github.com/maxlerebourg/crowdsec-bouncer-traefik-plugin
          version: v1.3.0
        rewriteHeaders:
          moduleName: github.com/XciD/traefik-plugin-rewrite-headers
          version: v0.0.4
        moveHeaders:
          moduleName: github.com/che-incubator/header-rewrite-traefik-plugin
          version: v0.1.2
        rewriteBody:
          moduleName: github.com/packruler/rewrite-body
          version: v1.2.0
    ingressClass:
      name: traefik-traefik
      isDefaultClass: true
    gatewayClass:
      name: traefik-internal
    providers:
      kubernetesIngress:
        ingressClass: "traefik-traefik"
        allowEmptyServices: true
        publishedService:
          enabled: true
      kubernetesCRD:
        ingressClass: "traefik-traefik"
        allowEmptyServices: true
        allowCrossNamespace: true
        allowExternalNameServices: true
      kubernetesGateway:
        enabled: true
        labelselector: "app.kubernetes.io/name=traefik"
    gateway:
      enabled: false
    ingressRoute:
      dashboard:
        enabled: true
    logs:
      general:
        format: json
      access:
        enabled: true
        format: json
    metrics:
      prometheus:
        entryPoint: metrics
        service:
          enabled: true
        serviceMonitor:
          metricRelabelings:
            - sourceLabels: [__name__]
              separator: ;
              regex: ^fluentd_output_status_buffer_(oldest|newest)_.+
              replacement: $1
              action: drop
          relabelings:
            - sourceLabels: [__meta_kubernetes_pod_node_name]
              separator: ;
              regex: ^(.*)$
              targetLabel: nodename
              replacement: $1
              action: replace
          jobLabel: traefik
          interval: 30s
          honorLabels: true
        prometheusRule:
          additionalLabels: {}
          namespace: "monitoring"
          rules:
            - alert: TraefikDown
              expr: up{job="traefik-traefik-metrics"} == 0
              for: 5m
              labels:
                context: traefik
                severity: warning
              annotations:
                summary: "Traefik Down"
                description: "{{ $labels.pod }} on {{ $labels.nodename }} is down"