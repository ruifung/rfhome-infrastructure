---
apiVersion: source.toolkit.fluxcd.io/v1
kind: OCIRepository
metadata:
  name: vector-chart
  namespace: monitoring
spec:
  interval: 24h
  url: oci://harbor.services.home.yrf.me/chartproxy/helm.vector.dev/vector
  ref:
    tag: 0.45.0
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: vector
  namespace: monitoring
spec:
  releaseName: vector
  install:
    skipCRDs: false
  chartRef:
    kind: OCIRepository
    name: vector-chart
  interval: 30m
  timeout: 1h
  values:
    role: Agent
    tolerations:
    - key: node-role.kubernetes.io/control-plane
      operator: Exists
      effect: NoSchedule
    customConfig:
      data_dir: /vector-data-dir
      api:
        enabled: true
        address: 127.0.0.1:8686
        playground: false
      sources:
        kubernetes_logs:
          type: kubernetes_logs
        internal_metrics:
          type: internal_metrics
      transforms:
        handle_k8s_pod_logs:
          type: remap
          inputs: ["kubernetes_logs"]
          source: |
            .namespace = .kubernetes.pod_namespace
            .pod = .kubernetes.pod_name
            .container = .kubernetes.container_name
            .node = .kubernetes.pod_node_name
            .container_image = .kubernetes.container_image
            .pod_ips = .kubernetes.pod_ips
            .pod_owner = .kubernetes.pod_owner
            log_format = .kubernetes.pod_annotations.log_format
            if is_string(log_format) {
                log_format = downcase(string!(log_format))
            }
            if log_format == "json" {
                .message = parse_json(.message) ?? .message
            } else if log_format == "logfmt" {
                .message = parse_logfmt(.message) ?? .message
            } else if log_format == "klog" {
                .message = parse_klog(.message) ?? .message
            } else if log_format == "glog" {
                .message = parse_glog(.message) ?? .message
            } else if log_format == "syslog" {
                .message = parse_syslog(.message) ?? .message
            } else if log_format == "clf" {
                .message = parse_common_log(.message) ?? .message
            }
            del(.kubernetes)
            del(.file)
      sinks:
        prom_exporter:
          type: prometheus_exporter
          inputs: [internal_metrics]
          address: 0.0.0.0:9090
        stdout:
          type: console
          inputs: [handle_k8s_pod_logs]
          encoding:
            codec: json
        loki_k8s:
          type: loki
          inputs: [handle_k8s_pod_logs]
          endpoint: "http://grafana-loki:3100"
          labels:
            "job": "k8s-pod-logs"
            "cluster": "pathweb"
            "node": "{{ `{{ node }}` }}"
            "namespace": "{{ `{{ namespace }}` }}"
            "pod": "{{ `{{ pod }}` }}"
            "container": "{{ `{{ container }}` }}"
            "pod_owner": "{{ `{{ pod_owner }}` }}"
          encoding:
            codec: json
