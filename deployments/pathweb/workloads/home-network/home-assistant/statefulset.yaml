---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: home-assistant
  annotations:
    kustomize.toolkit.fluxcd.io/force: enabled
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: home-assistant
  serviceName: home-assistant
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: home-assistant
      annotations:
        k8s.v1.cni.cncf.io/networks: '[{"name":"hass-iot-network"}]'
        io.cilium.proxy-visibility: <Egress/53/UDP/DNS>,<Egress/80/TCP/HTTP>
    spec:
      priorityClassName: rfhome-home-critical
      # runtimeClassName: gvisor

      nodeSelector:
        kubernetes.io/os: linux
        location: rfhome
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-group
                operator: In
                values: [baldric, voyager]
      securityContext:
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
        sysctls:
        - name: net.ipv4.ping_group_range
          value: "0 2147483647"
      containers:
      - name: home-assistant
        image: homeassistant/home-assistant:stable
        securityContext:
          allowPrivilegeEscalation: false
          # capabilities:
        #   drop:
        #     - ALL
        # add:
        #   - NET_ADMIN
        #   - NET_RAW
        env:
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        - name: PACKAGES
          value: "iputils"
        - name: TZ
          value: Asia/Kuala_Lumpur
        - name: HASS_DB_URI
          valueFrom:
            secretKeyRef:
              name: rfhome-postgres-ha-pguser-home-assistant
              key: pgbouncer-uri
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - containerPort: 8123
          name: http
          protocol: TCP
        volumeMounts:
        - name: hass-data
          mountPath: /config
        - name: hass-backup
          mountPath: /config/backups
        - name: homeassistant-docker-venv
          mountPath: /etc/services.d/home-assistant/run
          subPath: venv-run
        resources:
          requests:
            cpu: 200m
            memory: 3500M
          limits:
            memory: 5Gi
        livenessProbe:
          failureThreshold: 30
          periodSeconds: 10
          httpGet:
            port: 8123
            path: /
            scheme: HTTP
        startupProbe:
          failureThreshold: 30
          periodSeconds: 10
          httpGet:
            port: 8123
            path: /
            scheme: HTTP
      initContainers:
      - name: matter-server
        image: ghcr.io/home-assistant-libs/python-matter-server:stable
        restartPolicy: Always
        volumeMounts:
        - name: hass-data
          mountPath: /data
          subPath: matter-server
      volumes:
      - name: hass-data
        persistentVolumeClaim:
          claimName: home-assistant-data
      - name: hass-backup
        persistentVolumeClaim:
          claimName: home-assistant-backup
      - name: homeassistant-docker-venv
        configMap:
          name: homeassistant-docker-venv
          defaultMode: 0755
