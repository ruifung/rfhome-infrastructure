---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: home-assistant
  annotations:
    kustomize.toolkit.fluxcd.io/force: enabled
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: home-assistant
  serviceName: home-assistant
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: home-assistant
      annotations:
        k8s.v1.cni.cncf.io/networks: '[{"name":"hass-iot-network"}]'
        io.cilium.proxy-visibility: <Egress/53/UDP/DNS>,<Egress/80/TCP/HTTP>
    spec:
      priorityClassName: rfhome-home-critical
      # runtimeClassName: gvisor
      nodeSelector:
        kubernetes.io/os: linux
        location: rfhome
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-group
                operator: In
                values: [baldric, voyager]
      automountServiceAccountToken: false
      hostUsers: false
      securityContext:
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
          # sysctls:
          # - name: net.ipv4.ping_group_range
          #   value: "0 2147483647"
      containers:
      - name: home-assistant
        image: homeassistant/home-assistant:stable
        securityContext:
          allowPrivilegeEscalation: false
        env:
        - name: TZ
          value: Asia/Kuala_Lumpur
        - name: HASS_DB_URI
          valueFrom:
            secretKeyRef:
              name: rfhome-postgres-ha-pguser-home-assistant
              key: pgbouncer-uri
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        command: ["/bin/sh", "-c", "touch /.dockerenv && source /init"]
        ports:
        - containerPort: 8123
          name: http
          protocol: TCP
        volumeMounts:
        - name: hass-data
          mountPath: /config
        # - name: homeassistant-docker-venv
        #   mountPath: /etc/services.d/home-assistant/run
        #   subPath: venv-run
        resources:
          requests:
            cpu: 200m
            memory: 3500M
          limits:
            memory: 5Gi
        livenessProbe:
          failureThreshold: 30
          periodSeconds: 10
          httpGet:
            port: 8123
            path: /
            scheme: HTTP
        startupProbe:
          failureThreshold: 30
          periodSeconds: 10
          httpGet:
            port: 8123
            path: /
            scheme: HTTP
      initContainers:
      - name: matter-server
        image: ghcr.io/home-assistant-libs/python-matter-server:stable
        restartPolicy: Always
        args:
        - "--storage-path"
        - "/data"
        - "--paa-root-cert-dir"
        - "/data/credentials"
        - "--primary-interface"
        - "net1"
        - "--listen-address"
        - "127.0.0.1"
        - "--fabricid"
        - "2"
        - "--vendorid"
        - "4939"
        volumeMounts:
        - name: hass-data
          mountPath: /data
          subPath: matter-server
      - name: backup-sync
        image: minio/mc:latest
        restartPolicy: Always
        imagePullPolicy: Always
        command: ["/bin/sh"]
        args: ["-c", "mc alias set okinawa-s3 $MINIO_HOST $MINIO_ACCESS_KEY $MINIO_SECRET_KEY && mc mirror --checksum SHA256 --remove --watch /config/backups okinawa-s3/rfhome-hass-backup"]
        envFrom:
        - secretRef:
            name: home-assistant-backup-credentials
        volumeMounts:
        - name: hass-data
          mountPath: /config/backups
          subPath: backups
      volumes:
      - name: hass-data
        persistentVolumeClaim:
          claimName: home-assistant-data
      - name: homeassistant-docker-venv
        configMap:
          name: homeassistant-docker-venv
          defaultMode: 0755
