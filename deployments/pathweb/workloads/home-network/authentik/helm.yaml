---
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: authentik
  namespace: flux-system
spec:
  interval: 15m
  url: https://charts.goauthentik.io
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: authentik
  namespace: home-network
spec:
  releaseName: authentik
  chart:
    spec:
      chart: authentik
      version: 2024.10.2
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: authentik
  interval: 15m
  timeout: 60m
  # postRenderers:

  # - kustomize:
  #     patches:
  #       - patch: |
  #           - op: "add"
  #             path: "/spec/template/spec/runtimeClassName"
  #             value: "gvisor"
  #         target:
  #           kind: Deployment
  #           name: authentik-server
  #       - patch: |
  #           - op: "add"
  #             path: "/spec/template/spec/runtimeClassName"
  #             value: "gvisor"
  #         target:
  #           kind: Deployment
  #           name: authentik-worker
  values:
    global:
      deploymentStrategy:
        type: Recreate
      priorityClassName: rfhome-network-critical
      nodeSelector:
        location: rfhome
      containerSecurityContext:
        runAsNonRoot: true
        readOnlyRootFilesystem: true
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
      envFrom:
      - configMapRef:
          name: authentik-config
        prefix: AUTHENTIK_
      - secretRef:
          name: authentik-secrets
        prefix: AUTHENTIK_
      env:
      - name: AUTHENTIK_POSTGRESQL__USE_PGBOUNCER
        value: "true"
      - name: AUTHENTIK_POSTGRESQL__HOST
        valueFrom:
          secretKeyRef:
            name: "rfhome-postgres-ha-pguser-authentik"
            key: "pgbouncer-host"
      - name: AUTHENTIK_POSTGRESQL__PORT
        valueFrom:
          secretKeyRef:
            name: "rfhome-postgres-ha-pguser-authentik"
            key: "port"
      - name: AUTHENTIK_POSTGRESQL__USER
        valueFrom:
          secretKeyRef:
            name: "rfhome-postgres-ha-pguser-authentik"
            key: "user"
      - name: AUTHENTIK_POSTGRESQL__PASSWORD
        valueFrom:
          secretKeyRef:
            name: "rfhome-postgres-ha-pguser-authentik"
            key: "password"
      - name: AUTHENTIK_POSTGRESQL__NAME
        valueFrom:
          secretKeyRef:
            name: "rfhome-postgres-ha-pguser-authentik"
            key: "dbname"
    server:
      replicas: 2
      resources:
        requests:
          cpu: "1"
          memory: 850Mi
        limits:
          memory: 2Gi
      ingress:
        enabled: true
        ingressClassName: traefik-traefik
        labels:
          external-dns: local-pdns
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
        hosts:
        - auth.services.home.yrf.me
        paths:
        - /
        tls:
        - secretName: services-wildcard-cert
          hosts:
          - auth.services.home.yrf.me
      metrics:
        serviceMonitor:
          enabled: true
      livenessProbe:
        failureThreshold: 10
        periodSeconds: 30
      readinessProbe:
        failureThreshold: 10
        periodSeconds: 30
      startupProbe:
        failureThreshold: 100
        initialDelaySeconds: 60
        periodSeconds: 30
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-group
                operator: NotIn
                values:
                - "pi4"
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: node-group
                operator: In
                values: [baldric]
            weight: 100
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/name: authentik
                app.kubernetes.io/instance: authentik
                app.kubernetes.io/component: server
            topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: authentik
                  app.kubernetes.io/instance: authentik
              topologyKey: node-group
            weight: 100
    worker:
      replicas: 1
      resources:
        requests:
          cpu: 200m
          memory: 700Mi
        limits:
          memory: 1.5Gi
      livenessProbe:
        failureThreshold: 10
        periodSeconds: 30
      readinessProbe:
        failureThreshold: 10
        periodSeconds: 30
      startupProbe:
        failureThreshold: 100
        initialDelaySeconds: 60
        periodSeconds: 30
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/name: authentik
                app.kubernetes.io/instance: authentik
            topologyKey: node-group
    prometheus:
      rules:
        enabled: false
    redis:
      enabled: true
      master:
        priorityClassName: rfhome-network-critical
        nodeSelector:
          location: rfhome
        resources:
          requests:
            cpu: 70m
            memory: 150M
          limits:
            cpu: 250m
            memory: 512M
