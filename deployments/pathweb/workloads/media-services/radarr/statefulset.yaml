---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: radarr
  namespace: media-services
  labels:
    app.kubernetes.io/name: radarr
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: radarr
  serviceName: radarr-headless
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: radarr
    spec:
      nodeSelector:
        node-group: baldric
      containers:
      - name: radarr
        image: linuxserver/radarr:latest
        env:
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        - name: TZ
          value: "Asia/Kuala_Lumpur"
        ports:
        - containerPort: 7878
          name: http
        startupProbe:
          httpGet:
            path: /
            port: 7878
          periodSeconds: 3
          failureThreshold: 20
        livenessProbe:
          httpGet:
            path: /
            port: 7878
          periodSeconds: 60
        volumeMounts:
        - name: config
          mountPath: /config
        - name: downloads
          mountPath: /downloads
        - name: empty
          mountPath: /media
        - name: media
          mountPath: /media/Movies
          subPath: Movies
        resources:
          requests:
            cpu: "100m"
            memory: "250Mi"
          limits:
            cpu: "500m"
            memory: "1Gi"
      volumes:
      - name: downloads
        persistentVolumeClaim:
          claimName: okinawa-downloads-smb
      - name: media
        persistentVolumeClaim:
          claimName: okinawa-media-smb
      - name: empty
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: config
      labels:
        home.yrf.me/backup-to-okinawa-s3: "true"
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi
