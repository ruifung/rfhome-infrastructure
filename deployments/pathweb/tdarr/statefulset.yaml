apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: tdarr
  namespace: media-services
  labels:
    app.kubernetes.io/name: tdarr
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: tdarr
  serviceName: tdarr-headless
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tdarr
    spec:
      nodeSelector:
        kubernetes.io/hostname: pathweb-worker-baldric
      containers:
      - name: tdarr
        image: ghcr.io/haveagitgat/tdarr:latest
        env:
        - name: serverIP
          value: 0.0.0.0
        - name: serverPort
          value: "8266"
        - name: webUIPort
          value: "8265"
        - name: internalNode
          value: "true"
        - name: inContainer
          value: "true"
        - name: ffmpegVersion
          value: "6"
        - name: TZ
          value: "Asia/Kuala_Lumpur"
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        ports:
        - containerPort: 8266
          name: tdarr-server
        - containerPort: 8265
          name: tdarr-webui
        volumeMounts:
        - name: data
          mountPath: /app/server
          subPath: server
        - name: data
          mountPath: /app/configs
          subPath: configs
        - name: data
          mountPath: /app/logs
          subPath: logs
        - name: media
          mountPath: /media
        - name: tdarr-workdir
          mountPath: /temp
      volumes:
      - name: media
        persistentVolumeClaim:
          claimName: okinawa-media
      - name: tdarr-workdir
        nfs:
          server: 10.229.229.12
          path: /mnt/hdd/applications/tdarr
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
