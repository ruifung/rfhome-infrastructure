---
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: grafana-charts
  namespace: monitoring
spec:
  interval: 15m
  url: https://grafana.github.io/helm-charts
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: grafana-loki
  namespace: monitoring
spec:
  releaseName: grafana-loki
  install:
    skipCRDs: false
  chart:
    spec:
      chart: loki
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
      version: 6.12.0
  interval: 30m
  timeout: 1h
  valuesFrom:
    - kind: Secret
      name: grafana-loki-s3-credentials
      valuesKey: accessKeyId
      targetPath: loki.storage.s3.accessKeyId
    - kind: Secret
      name: grafana-loki-s3-credentials
      valuesKey: secretAccessKey
      targetPath: loki.storage.s3.secretAccessKey
  values:
    loki:
      image:
        tag: 3.0.0
      auth_enabled: false
      commonConfig:
        replication_factor: 3
      compactor:
        retention_enabled: true
        delete_request_store: s3
      limits_config:
        retention_period: 740h
        allow_structured_metadata: true
      rulerConfig:
        wal:
          dir: /var/loki/ruler-wal
        remote_write:
          enabled: true
          client:
            url: http://vmsingle-vm-stack-victoria-metrics-k8s-stack.monitoring.svc:8429/api/v1/write
      schemaConfig:
        configs:
        - from: "2024-01-01"
          store: tsdb
          index:
            prefix: loki_index_
            period: 24h
          object_store: s3
          schema: v13
      storage:
        type: s3
        bucketNames:
          chunks: rfhome-loki-chunks
          ruler: rfhome-loki-ruler
          admin: rfhome-loki-admin
        s3:
          endpoint: https://okinawa-s3.services.home.yrf.me:9000
          region: rfhome
          # secretAccessKey: ""
          # accessKeyId: ""
          s3ForcePathStyle: false
          insecure: false
    deploymentMode: SingleBinary
    singleBinary:
      replicas: 3
    gateway:
      enabled: false
    ingress:
      enabled: true
      ingressClassName: traefik-traefik
      labels:
        external-dns: local-pdns
      annotations:
        traefik.ingress.kubernetes.io/router.middlewares: home-network-ak-outpost-authentik-embedded-outpost@kubernetescrd
      hosts:
      - loki.services.home.yrf.me
      tls:
      - hosts:
        - loki.services.home.yrf.me
        secretName: services-wildcard-cert
    resultsCache:
      enabled: false
    chunksCache:
      enabled: false
    # Ensure minio is disabled
    minio:
      enabled: false
    backend:
      replicas: 0
    read:
      replicas: 0
    write:
      replicas: 0